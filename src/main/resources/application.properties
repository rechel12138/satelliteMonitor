server.port=8000
#session超时时间24小时
server.session.timeout=86400
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://127.0.0.1/htzh?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=true
spring.datasource.url=jdbc:mysql://182.92.216.245:3336/htdxjk?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=true
spring.datasource.username=root
spring.datasource.password=sanqishuju168
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#DataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

#mybatis.mapperLocations=classpath:mybatis/mapper/htdxjk/*.xml
#mybatis.typeAliasesPackage=com.htzh.htdxjk.entity

mybatis-plus.mapperLocations=classpath:mybatis/mapper/htdxjk/*.xml
mybatis-plus.typeAliasesPackage=com.htzh.htdxjk.entity
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#当查询数据为空时字段返回为null，不加这个查询数据为空时，字段将被隐藏
mybatis-plus.configuration.call-setters-on-nulls=true
#SPRING MVCs
web.upload-path=C:/temp/
spring.mvc.static-path-pattern=/**
spring.freemarker.template-loader-path=classpath:/templates
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,\
classpath:/static/,classpath:/public/,file:${web.upload-path}

#FREEMARKER (FreeMarkerAutoConfiguration)
spring.freemarker.allow-request-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
#spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=
#spring.freemarker.settings.*=
spring.freemarker.suffix=.html
#spring.freemarker.template-loader-path=classpath:/templates/ #comma-separated list
#spring.freemarker.view-names= # whitelist of view names that can be resolved

logging.level.org.springframework.jdbc.core.JdbcTemplate=debug

myftp.ip=121.42.33.140
myftp.port=21
myftp.userName=qyu2866040001
myftp.password=4r5t6y7u
#远程ftp路径
myftp.remotePath = /ftplogs
#ftp服务器
myftp.localPath=/Users/Rechel/Downloads/ftpdir
#本地
#myftp.localPath=/Users/Rechel/Downloads

#用户初始密码，重置密码时使用
user_default_password=123456

#静态资源对外暴露的访问路径
file.staticAccessPath=/upload/**
#文件上传目录（注意Linux和Windows上的目录结构不同）
#file.uploadFolder=/home/upload/
file.uploadFolder=D://upload/

#硬编码      管理员主键
role.adminId = sr001
